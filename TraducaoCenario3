import java.util.*;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

public class TraducaoCenario3 {

	public static void main(String[] args) {
		TraducaoCenario3 obj = new TraducaoCenario3();
		obj.run();

	}
	
	class Classe1 {
		Integer id;
		Set<Integer> ids2 = new HashSet<Integer>();
		
		public Classe1(Integer id) {
			this.id = id;
		}
		
		@Override
		public int hashCode() {
			final int prime = 31;
			int result = 1;
			result = prime * result + getEnclosingInstance().hashCode();
			result = prime * result + ((id == null) ? 0 : id.hashCode());
			return result;
		}



		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			Classe1 other = (Classe1) obj;
			if (!getEnclosingInstance().equals(other.getEnclosingInstance()))
				return false;
			if (id == null) {
				if (other.id != null)
					return false;
			} else if (!id.equals(other.id))
				return false;
			return true;
		}



		@Override
		public String toString() {
			return "[id=" + id + ", e: " + ids2 + "]";
		}



		private EP4deAED2 getEnclosingInstance() {
			return EP4deAED2.this;
		}
	}
	
	public void run() {
		  String cenario = "C:/Users/maria/Desktop/gigant3.txt";
		  BufferedReader br = null;
		  String linha = "";
		  List<Classe1> Grafo = new ArrayList<Classe1>();
		  try {

			  br = new BufferedReader(new FileReader(cenario));
			  while ((linha = br.readLine()) != null) {
					  String[] encontro = linha.split(" ");
					  
					  Classe1 p1 = new Classe1(Integer.parseInt(encontro[0]));
					  Classe1 p2 = new Classe1(Integer.parseInt(encontro[1]));
					  if (!Grafo.contains(p1)) {
						  Grafo.add(p1);
					  }
					  Grafo.get(Grafo.indexOf(p1)).ids2.add(p2.id);
					  if (!Grafo.contains(p2)) {
						  Grafo.add(p2);
					  }
					  Grafo.get(Grafo.indexOf(p2)).ids2.add(p1.id);
				  
			  }
			  
			  Set<Integer> idTrocado = new HashSet<Integer>();
			  for (int i = 0; i < Grafo.size(); i++) idTrocado.add(Grafo.get(i).id);
			  Integer n = 0;
			  Integer parar = 0;
			  for (int i = 0; i < Grafo.size(); i++) {
				  while (idTrocado.contains(n)) {
					  n++;
					  if (n > Grafo.size()) {
						  parar = 1;
						  break;
					  }
				  }
				  if (parar == 1) break;
				  Integer [] array = new Integer [idTrocado.size()];
				  idTrocado.toArray(array);
				  for (Integer Array : array) {
					  if (Array > n) {
						  for (int j = 0; j < Grafo.size(); j++) {
							  if (Grafo.get(j).id.equals(Array)) Grafo.get(j).id = n;
							  Integer [] array2 = new Integer [Grafo.get(j).ids2.size()];
							  Grafo.get(j).ids2.toArray(array2);
							  for (Integer Array2 : array2) {
								  if (Array2.equals(Array)) {
									  Grafo.get(j).ids2.remove(Array2);
									  Grafo.get(j).ids2.add(n);
								  }
							  }
						  }
						  idTrocado.remove(Array);
						  idTrocado.add(n);
						  break;
					  }
				  }
			  }
			  for (int i = 0; i < Grafo.size(); i++) {
				  Integer [] array = new Integer [Grafo.get(i).ids2.size()];
				  Grafo.get(i).ids2.toArray(array);
				  for (Integer Array : array) {
					  System.out.println(Grafo.get(i).id + " " + Array);
				  }
			  }

		    } catch (FileNotFoundException e) {
		        e.printStackTrace();
		    } catch (IOException e) {
		        e.printStackTrace();
		    } finally {
		        if (br != null) {
		            try {
		                br.close();
		            } catch (IOException e) {
		                e.printStackTrace();
		            }
		        }
		    }
	  }
	
}
