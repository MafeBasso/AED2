import java.util.*;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

public class EP2 {

	public static void main(String[] args) {
		EP2 obj = new EP2();
		obj.run();

	}
	
	class Classe1 {
		Integer id;
		Set<Integer> ids2 = new HashSet<Integer>();
		
		public Classe1(Integer id) {
			this.id = id;
		}
		
		@Override
		public int hashCode() {
			final int prime = 31;
			int result = 1;
			result = prime * result + getEnclosingInstance().hashCode();
			result = prime * result + ((id == null) ? 0 : id.hashCode());
			return result;
		}



		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			Classe1 other = (Classe1) obj;
			if (!getEnclosingInstance().equals(other.getEnclosingInstance()))
				return false;
			if (id == null) {
				if (other.id != null)
					return false;
			} else if (!id.equals(other.id))
				return false;
			return true;
		}



		@Override
		public String toString() {
			return "[id=" + id + ", e: " + ids2 + "] ";
		}



		private EP2 getEnclosingInstance() {
			return EP2.this;
		}
	}
	
	public void run() {
		  String cenario = "C:/Users/maria/Desktop/cenario1.txt";
		  BufferedReader br = null;
		  String linha = "";
		  int n = 0;
		  List<Classe1> Grafo = new ArrayList<Classe1>();
		  try {

			  br = new BufferedReader(new FileReader(cenario));
			  while ((linha = br.readLine()) != null) {
				  if (n > 1) {
					  String[] encontro = linha.split(" ");
					  
					  Classe1 p1 = new Classe1(Integer.parseInt(encontro[0]));
					  Classe1 p2 = new Classe1(Integer.parseInt(encontro[1]));
					  if (!Grafo.contains(p1)) {
						  Grafo.add(p1);
					  }
					  Grafo.get(Grafo.indexOf(p1)).ids2.add(p2.id);
					  if (!Grafo.contains(p2)) {
						  Grafo.add(p2);
					  }
					  Grafo.get(Grafo.indexOf(p2)).ids2.add(p1.id);
				  }
				  n++;
			  }
			  
			  Map<Integer, Integer> mapGraus = new HashMap<Integer, Integer>();
			  for (Classe1 classe1 : Grafo) {
				  if (!mapGraus.containsKey(classe1.ids2.size())) {
					  mapGraus.put(classe1.ids2.size(), 0);
				  }
				  mapGraus.put(classe1.ids2.size(), mapGraus.get(classe1.ids2.size()) + 1); 
			  }
			  mapGraus.put(0, 86318 - Grafo.size());
			  System.out.println("Total de Arestas: " + Grafo.size()/2);
			  System.out.println("Grau x Quantidade de Pessoas com esse grau");
			  for (Integer grau : mapGraus.keySet()) {
				  System.out.println(grau + "\t" + mapGraus.get(grau));
			  }

		    } catch (FileNotFoundException e) {
		        e.printStackTrace();
		    } catch (IOException e) {
		        e.printStackTrace();
		    } finally {
		        if (br != null) {
		            try {
		                br.close();
		            } catch (IOException e) {
		                e.printStackTrace();
		            }
		        }
		    }
	  }
	
}
